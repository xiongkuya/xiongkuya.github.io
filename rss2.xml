<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>凶哭呀</title>
    <link>http://yoursite.com/</link>
    
    <atom:link href="http://yoursite.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>好运藏在努力中</description>
    <pubDate>Thu, 20 Aug 2020 10:35:22 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title></title>
      <link>http://yoursite.com/2020/08/20/SpringBoot%E4%B8%AD%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</link>
      <guid>http://yoursite.com/2020/08/20/SpringBoot%E4%B8%AD%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</guid>
      <pubDate>Thu, 20 Aug 2020 10:35:20 GMT</pubDate>
      
        
        
      <description>&lt;p&gt; @[TOC]&lt;/p&gt;
&lt;h1 id=&quot;springBoot的配置文件&quot;&gt;&lt;a href=&quot;#springBoot的配置文件&quot; class=&quot;headerlink&quot; title=&quot;springBoot的配置文件&quot;&gt;&lt;/a&gt;springBoot的配置文件&lt;/h1&gt;&lt;p&gt;&amp;em</description>
        
      
      
      
      <content:encoded><![CDATA[<p> @[TOC]</p><h1 id="springBoot的配置文件"><a href="#springBoot的配置文件" class="headerlink" title="springBoot的配置文件"></a>springBoot的配置文件</h1><p>&emsp;</p><h2 id="1-SpringBoot配置文件的两种格式"><a href="#1-SpringBoot配置文件的两种格式" class="headerlink" title="1.SpringBoot配置文件的两种格式"></a>1.SpringBoot配置文件的两种格式</h2><p>&emsp;&emsp;&emsp;&emsp;springBoot中的配置文件有两种配置文件格式,分别是properties和yml<br>SpringBoot使用一个全局的配置文件，配置文件名是固定的； </p><ol><li>application.properties</li><li>application.yml</li></ol><h2 id="SpringBoot配置文件的作用"><a href="#SpringBoot配置文件的作用" class="headerlink" title="SpringBoot配置文件的作用"></a>SpringBoot配置文件的作用</h2><p>&emsp;&emsp;配置文件的作用：修改SpringBoot自动配置的默认值；SpringBoot在底层都给我们自动配置好；<br>&emsp;&emsp;</p><h2 id="YAML的语法"><a href="#YAML的语法" class="headerlink" title="YAML的语法"></a>YAML的语法</h2><p>&emsp;&emsp;</p><h3 id="YAML的基本语法"><a href="#YAML的基本语法" class="headerlink" title="YAML的基本语法"></a>YAML的基本语法</h3><p>&emsp;&emsp;k:(空格)v：表示一对键值对（<strong>空格必须有</strong>）； <strong>以空格的缩进来控制层级关系；只要是左对齐的一列数据，都是同一个层级的</strong></p><h3 id="YAML中值的写法"><a href="#YAML中值的写法" class="headerlink" title="YAML中值的写法"></a>YAML中值的写法</h3><h4 id="字面量"><a href="#字面量" class="headerlink" title="字面量:"></a>字面量:</h4><p>&emsp;&emsp;普通的值（<strong>数字，字符串，布尔</strong>）<br>k: v：&emsp;字面直接来写;字符串默认不用加上单引号或者双引号；<br> “”：&emsp;双引号；不会转义字符串里面的特殊字符;特殊字符会作为本身想表示的意思 name: “zhangsan \n lisi”：输出；zhangsan 换行 lisi<br> ‘’：&emsp; 单引号:会转义特殊字符，特殊字符最终只是一个普通的字符串数据 name: ‘zhangsan \n lisi’：输出；zhangsan \n lisi</p><h4 id="对象、Map（属性和值）（键值对）："><a href="#对象、Map（属性和值）（键值对）：" class="headerlink" title="对象、Map（属性和值）（键值对）："></a>对象、Map（属性和值）（键值对）：</h4><p>k: v：在下一行来写对象的属性和值的关系；<br> <strong>注意缩进</strong> 对象还是k: v的方式<br> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">friends:</span></span><br><span class="line">    <span class="attr">lastName:</span> <span class="string">zhangsan</span> </span><br><span class="line">    <span class="attr">age:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure><br>行内写法：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">friends:</span> &#123;<span class="attr">lastName:</span> <span class="string">zhangsan</span>,<span class="attr">age:</span> <span class="number">18</span>&#125;</span><br></pre></td></tr></table></figure><h4 id="数组（List、Set）："><a href="#数组（List、Set）：" class="headerlink" title="数组（List、Set）："></a>数组（List、Set）：</h4><p>用- 值表示数组中的一个元素</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pets:</span> </span><br><span class="line">    <span class="string">‐</span> <span class="string">cat</span> </span><br><span class="line">    <span class="string">‐</span> <span class="string">dog</span> </span><br><span class="line">    <span class="string">‐</span> <span class="string">pig</span></span><br></pre></td></tr></table></figure><p>行内写法：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pets:</span> [<span class="string">cat</span>,<span class="string">dog</span>,<span class="string">pig</span>]</span><br></pre></td></tr></table></figure><h3 id="配置文件值注入"><a href="#配置文件值注入" class="headerlink" title="配置文件值注入"></a>配置文件值注入</h3><p>&emsp;&emsp;使用下面2个注解标注在类的上面就好了,@ConfigurationProperties中的参数prefix的值为在配置文件中的属性值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span> </span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;person&quot;)</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>http://yoursite.com/2020/08/20/SpringBoot%E4%B8%AD%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
